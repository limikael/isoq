export default `

//
// This file is automatically generated.
//
// Don't edit this file, and don't put it under version control!
//

import {createIsoState, IsoContextProvider} from "isoq";
import {hydrate, createElement} from "preact";
import {renderToStringAsync} from "preact-render-to-string";

$$IMPORTS$$

function Element({isoState}) {
	let content=<Entrypoint {...isoState.props}/>;
	for (let W of [...__wrappers].reverse())
		content=<W {...isoState.props}>{content}</W>

	return (
		<IsoContextProvider isoState={isoState}>
			{content}
		</IsoContextProvider>
	);
}

if (globalThis.window && globalThis.window.__iso) {
	let isoState=createIsoState({
		refs: globalThis.window.__iso.refs,
		props: globalThis.window.__iso.props,
		url: globalThis.window.location,
	});

	let element=<Element isoState={isoState}/>
	hydrate(element,globalThis.window.document.getElementById("isoq"));
}

/* SSR */

export {createIsoState};

async function ssrRender({isoState}) {
	let element=<Element isoState={isoState}/>;
	return await renderToStringAsync(element);
}

export {ssrRender};
`;
